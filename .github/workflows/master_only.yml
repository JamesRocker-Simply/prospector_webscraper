name: Master Only Deploy

on:
  # schedule:
    # - cron:  '30 7 * * 0'
  push:
    branches:
      - 'master'

env:
  REPOSITORY: "prospector_webscraper"

concurrency: huxley-ci-${{ github.ref }}

jobs:
  Bootstrap:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.AWS_LIVE_CICD_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_LIVE_CICD_SECRET_ACCESS_KEY }}
          aws-region           : ${{ secrets.AWS_LIVE_CICD_REGION }}
      - name: Bootstrap
        uses: aws-actions/aws-codebuild-run-build@v1
        with:
          project-name: ${{ env.REPOSITORY }}
          buildspec-override: _pipeline/stage_bootstrap/stage_bootstrap.yml
  Build:
    runs-on: ubuntu-latest
    needs: [Bootstrap]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.AWS_LIVE_CICD_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_LIVE_CICD_SECRET_ACCESS_KEY }}
          aws-region           : ${{ secrets.AWS_LIVE_CICD_REGION }}
      - name: Build
        uses: aws-actions/aws-codebuild-run-build@v1
        with:
          project-name: ${{ env.REPOSITORY }}
          buildspec-override: _pipeline/stage_build/stage_build.yml
  Deploy:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.AWS_LIVE_CICD_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_LIVE_CICD_SECRET_ACCESS_KEY }}
          aws-region           : ${{ secrets.AWS_LIVE_CICD_REGION }}
      - name: Deploy
        uses: aws-actions/aws-codebuild-run-build@v1
        with:
          project-name: ${{ env.REPOSITORY }}
          buildspec-override: _pipeline/stage_deploy/stage_deploy.yml
  Alerts:
    runs-on: ubuntu-latest
    needs: [Deploy]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.AWS_LIVE_CICD_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_LIVE_CICD_SECRET_ACCESS_KEY }}
          aws-region           : ${{ secrets.AWS_LIVE_CICD_REGION }}
      - name: New Relic alerts for container apps
        uses: aws-actions/aws-codebuild-run-build@v1
        with:
          project-name: ${{ env.REPOSITORY }}
          buildspec-override: _pipeline/stage_alerts/stage_alerts.yml
  Publish:
    runs-on: ubuntu-latest
    needs: [Deploy]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.AWS_LIVE_CICD_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_LIVE_CICD_SECRET_ACCESS_KEY }}
          aws-region           : ${{ secrets.AWS_LIVE_CICD_REGION }}
      - name: Publish
        uses: aws-actions/aws-codebuild-run-build@v1
        with:
          project-name: ${{ env.REPOSITORY }}
          buildspec-override: _pipeline/stage_publish/stage_publish.yml
  Cleanup:
    runs-on: ubuntu-latest
    needs: [Publish]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.AWS_LIVE_CICD_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_LIVE_CICD_SECRET_ACCESS_KEY }}
          aws-region           : ${{ secrets.AWS_LIVE_CICD_REGION }}
      - name: Cleanup
        uses: aws-actions/aws-codebuild-run-build@v1
        with:
          project-name: ${{ env.REPOSITORY }}
          buildspec-override: _pipeline/stage_cleanup/stage_cleanup.yml
